plugins {
  id 'java'
  id 'idea'
  id 'io.quarkus'
  id 'com.diffplug.spotless'
  id 'maven-publish'
}

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
  implementation 'io.quarkus:quarkus-arc'
  implementation 'io.quarkus:quarkus-vertx'
  implementation 'io.quarkus:quarkus-qute'
  implementation 'io.quarkus:quarkus-jackson'

  implementation 'com.slack.api:bolt-jakarta-socket-mode:1.45.2'
  implementation 'jakarta.websocket:jakarta.websocket-client-api:2.2.0'
  implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:2.2.0'

  testImplementation 'io.quarkus:quarkus-junit5'
}

group 'com.lescastcodeurs'
version System.getenv('RELEASE_VERSION') ?: '1.0.0'

// https://docs.gradle.org/current/userguide/publishing_customization.html#sec:publishing_custom_artifacts_to_maven
def runnerJar = layout.buildDirectory.file("${rootProject.name}-${version}-runner.jar")
def runnerArtifact = artifacts.add('archives', runnerJar.get().asFile) {
  type 'runner'
  builtBy 'quarkusBuild'
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << '-parameters'
}

compileTestJava {
  options.encoding = 'UTF-8'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact runnerArtifact
      pom {
        name = 'Les Cast Codeurs podcast bot'
        description = 'A slack bot that automates show notes creation for Les Cast Codeurs podcast'
        url = 'https://github.com/lescastcodeurs/lcc-slack-bot'
        licenses {
          license {
            name = 'MIT License'
            url = 'https://github.com/lescastcodeurs/lcc-slack-bot/blob/main/LICENSE'
          }
        }
      }
    }
  }

  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/lescastcodeurs/lcc-slack-bot"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}

spotless {
  java {
    target '**/*.java' // prevent quarkus generated code to be formatted
    googleJavaFormat('1.15.0')
  }
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

// https://quarkus.io/guides/gradle-tooling#publishing-your-application
tasks.withType(GenerateModuleMetadata).configureEach {
  suppressedValidationErrors.add('enforced-platform')
}

// Auto-format code if not on CI
// See also https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables,
// https://docs.gitlab.com/ee/ci/variables/predefined_variables.html.
if (!System.getenv().containsKey('CI')) {
  tasks.named('spotlessCheck') {
    dependsOn(tasks.named('spotlessApply'))
  }
} // else execute only spotlessCheck
